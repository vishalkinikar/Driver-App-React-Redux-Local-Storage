{"version":3,"sources":["Constants.js","Reducers.js","Actions.js","Modal.js","Driver.js","Login.js","App.js","index.js","Middleware.js"],"names":["constants","getNextId","lastId","INITIAL_DRIVER_STATE","all","currentDriver","id","INITIAL_MODAL_STATE","isOpen","newEntry","initialData","Actions","auth","data","type","payload","isAuth","getAllDrivers","dispatch","setCurrentDriver","editDriver","updateDriver","createDriver","saveNewDriver","deleteDriver","driverId","toggleModal","Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modal","state","fname","lname","dob","Date","licno","email","phone","licexpdate","errors","$","modalComponent","on","actions","closeModal","test","String","toLowerCase","driver","toJSON","length","push","setState","join","validateEmail","e","preventDefault","defineProperty","target","name","value","date","react_default","a","createElement","className","data-backdrop","tabIndex","role","onClick","bind","aria-label","aria-hidden","htmlFor","onChange","handleInputChange","react_datepicker_es","dateFormat","selected","handleDOBChange","handleLEDChange","handleSave","handleDelete","React","Component","connect","drivers","bindActionCreators","Driver","stopPropagation","$currentPanel","closest","children","not","slideUp","slideToggle","active","Auth","pass","_this2","user","password","_ref","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","response","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","json","token","error","abrupt","stop","_x","apply","arguments","reqresAuth","handleLogin","handleAuth","DriverApp","Modal_Modal","renderDrivers","Login_Auth","map","Driver_Driver","assign","key","rootReducer","combineReducers","undefined","action","newCurrent","newDriver","allDrivers","filter","ReactDOM","render","es","store","createStore","applyMiddleware","getState","newAction","localState","localStorage","getItem","parse","driverState","setItem","index","App_DriverApp","document","querySelector"],"mappings":"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","file":"static/js/main.f73bfca6.chunk.js","sourcesContent":["\nconst constants = {\n  GET_ALL_DRIVERS : 'GET_ALL_DRIVERS',\n  SET_CURRENT_DRIVER : 'SET_CURRENT_DRIVER',\n  EDIT_DRIVER : 'EDIT_DRIVER',\n  UPDATE_DRIVER : 'UPDATE_DRIVER',\n  CREATE_DRIVER : 'CREATE_DRIVER',\n  DELETE_DRIVER : 'DELETE_DRIVER',\n  SAVE_NEW_DRIVER : 'SAVE_NEW_DRIVER',\n  TOGGLE_MODAL : 'TOGGLE_MODAL',\n  AUTH : 'AUTH',\n  IS_AUTH: 'IS_AUTH'\n}\n\nexport { constants } ","import { constants } from './Constants';\n\nconst getNextId = (lastId) => {\n  return lastId + 1;\n}\n\nconst INITIAL_DRIVER_STATE = {\n  lastId: 0,\n  all: [],\n  currentDriver: {id: null}\n}\n\nconst DriverReducer = function (state = INITIAL_DRIVER_STATE, action) {\n  switch(action.type) {\n    case constants.GET_ALL_DRIVERS:\n      let lastId = state.lastId;\n      let drivers = action.payload.drivers.all.map(driver => {\n        lastId = getNextId(lastId);\n        driver.id = lastId;\n        return driver;\n      }); \n      return Object.assign({}, state, {lastId: lastId}, {all: drivers})\n    case constants.IS_AUTH:\n      return Object.assign({}, state, {auth: action.payload});\n    case constants.SET_CURRENT_DRIVER:\n      let newCurrent = state.currentDriver.id === action.payload.id ? INITIAL_DRIVER_STATE.currentDriver : action.payload;\n      return Object.assign({}, state, {currentDriver: newCurrent});\n    case constants.UPDATE_DRIVER:\n      return Object.assign({}, state, {currentDriver: action.payload}, {all: state.all.map(driver => {\n          if (driver.id === action.payload.id) {\n            return action.payload;\n          }\n          return driver\n        })}\n      );\n    case constants.SAVE_NEW_DRIVER:\n      let newDriver = action.payload;\n      newDriver.id = getNextId(state.lastId);\n      state.lastId = newDriver.id;\n      let allDrivers = state.all;\n      allDrivers.push(newDriver);\n      return Object.assign({}, state, {all: allDrivers});\n    case constants.DELETE_DRIVER:\n      return Object.assign({}, state, {all: state.all.filter(driver => {\n          return driver.id !== action.payload; \n        })\n      });\n    case constants.AUTH:\n      return Object.assign({}, state, {auth: action.payload});\n    default:\n      return state;\n  }\n}\n\nconst INITIAL_MODAL_STATE = {\n  isOpen: false,\n  newEntry: false\n}\n\nconst ModalReducer = (state = INITIAL_MODAL_STATE, action) => {\n  switch(action.type) {\n    case constants.TOGGLE_MODAL:\n      return Object.assign({}, state, {isOpen: !state.isOpen});\n    case constants.EDIT_DRIVER:\n      return Object.assign({}, state, {newEntry: false});\n    case constants.CREATE_DRIVER:\n      return Object.assign({}, state, {newEntry: true});\n    default:\n      return state;\n  }\n}\n\nexport { DriverReducer, ModalReducer }","import { constants } from './Constants';\n\n// let initialData = [\n//   {\n//     fname: 'Vishal', \n//     lname: 'Kinikar',\n//     dob: '2018-11-14T17:46:58.000Z',\n//     licno: 'MH48/1988/450X1',\n//     email: 'test@yahoo.co.in',\n//     phone: '980000000',\n//     licexpdate: '2018-11-25T17:46:58.494Z\n//   }\n// ];\n\nlet initialData = [];\n  \n  \n  \nconst Actions = {\n\n  auth: (data) => {\n    return {\n      type: constants.AUTH,\n      payload: data\n    }\n  },\n\n  isAuth: () => {\n    return {\n      type: constants.IS_AUTH\n    }\n  },\n\n  getAllDrivers: () => {\n    return (dispatch) => {   \n      dispatch(\n        {\n        type: constants.GET_ALL_DRIVERS,\n        payload: initialData\n      }\n      ); \n    }\n  },\n\n  setCurrentDriver: (data) => {\n    return {\n      type: constants.SET_CURRENT_DRIVER,\n      payload: data\n    }\n  },\n\n  editDriver: () => {\n    return {\n      type: constants.EDIT_DRIVER\n    }\n  },\n  \n  updateDriver: (data) => {\n    return {\n      type: constants.UPDATE_DRIVER,\n      payload: data\n    }\n  },\n  \n  createDriver: () => {\n    return {\n      type: constants.CREATE_DRIVER\n    }\n  },\n  \n  saveNewDriver: (data) => {\n    return {\n      type: constants.SAVE_NEW_DRIVER,\n      payload: data\n    }\n  },\n  \n  deleteDriver: (driverId) => {\n    return {\n      type: constants.DELETE_DRIVER,\n      payload: driverId\n    }\n  },\n  \n  toggleModal: () => {\n    return {\n      type: constants.TOGGLE_MODAL\n    }\n  }\n}\n  \n  \n  export { Actions };","import React from 'react';\nimport $ from \"jquery\";import DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Actions } from './Actions';\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    if (!props.modal.newEntry) {\n      this.state = ({\n        fname: props.fname,\n        lname: props.lname,\n        dob: new Date(props.dob),\n        licno: props.licno,\n        email: props.email,\n        phone: props.phone,\n        licexpdate: new Date(props.licexpdate),\n        errors: ''\n      });\n    } else {\n      this.state = ({\n        fname: '',\n        lname: '',\n        dob: new Date(),\n        licno: '',\n        email: '',\n        phone: '',\n        licexpdate: new Date(),\n        errors: ''\n      });\n    }\n  }\n  \n  componentDidMount() {\n    $('#editDriver').modal('show');\n  }\n  \n  closeModal() {\n    let modalComponent = this;\n    $('#editDriver').modal('hide');\n    $('#editDriver').on('hidden.bs.modal', function () {\n      modalComponent.props.actions.toggleModal();\n    });\n  }\n  \n  handleDelete() {\n    if (this.props.id && !this.props.modal.newEntry) {\n      this.props.actions.deleteDriver(this.props.id);  \n    }\n    this.closeModal();\n  }\n\n  validateEmail(email) {\n    let re = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/;\n    return re.test(String(email).toLowerCase());\n  }\n  \n  handleSave() {\n    let driver = {\n        id: this.props.id,\n        fname: this.state.fname,\n        lname: this.state.lname,\n        dob: typeof this.state.dob === 'object' ? this.state.dob.toJSON() : this.state.dob,\n        licno: this.state.licno,\n        email: this.state.email,\n        phone: this.state.phone,\n        licexpdate: typeof this.state.licexpdate === 'object' ? this.state.licexpdate.toJSON() : this.state.licexpdate,\n    }\n    if (driver.fname.length < 1 || driver.dob.length < 1 || driver.licno.length < 1 || driver.email.length < 1 || driver.phone.length < 1 || driver.licexpdate.length < 1) {\n      let errors = [];\n      errors.push('All fields are required.');\n      if (errors.length >= 1) {\n        this.setState({\n          errors: errors.join(' ')\n        });\n        return;\n      }\n    }\n    if(!this.validateEmail(driver.email)) {\n      this.setState({\n        errors: 'Email Not Valid!'\n      });\n      return;\n    }\n    if (!this.props.modal.newEntry) {\n      this.props.actions.updateDriver(driver);\n    }\n    else {\n      this.props.actions.saveNewDriver(driver);\n    }\n    this.closeModal();\n  }\n  \n  handleInputChange(e) {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleDOBChange(date) {\n    this.setState({\n      dob: date\n    });\n  }\n\n  handleLEDChange(date) {\n    this.setState({\n      dob: date\n    });\n  }\n\n  handleEmailChange(date) {\n    this.setState({\n      dob: date\n    });\n  }\n  \n  render() {\n    if (!this.props.modal.isOpen) {\n      this.closeModal();\n    }\n    return <div \n      id={\"editDriver\"}\n      className=\"modal fade\" \n      data-backdrop=\"static\"       \n      tabIndex=\"-1\" \n      role=\"dialog\"       \n        >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <button \n                onClick={this.closeModal.bind(this)}\n                type=\"button\" className=\"close\" \n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-fname\">First Name</label>\n                <input type=\"text\" \n                  onChange={this.handleInputChange.bind(this)}\n                  id=\"driver-fname\" \n                  className=\"form-control\"\n                  value={this.state.fname}\n                  name=\"fname\"/>\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-lname\">Last Name</label>\n                <input type=\"text\" \n                  onChange={this.handleInputChange.bind(this)}\n                  id=\"driver-name\" \n                  className=\"form-control\"\n                  value={this.state.lname}\n                  name=\"lname\"/>\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-dob\">DOB</label>\n                <DatePicker\n                  dateFormat=\"yyyy/MM/dd\"\n                  selected={this.state.dob}\n                  onChange={this.handleDOBChange.bind(this)}\n                />\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-licno\">License No</label>\n                <input type=\"text\" \n                  onChange={this.handleInputChange.bind(this)}\n                  id=\"driver-licno\" \n                  className=\"form-control\"\n                  value={this.state.licno}\n                  name=\"licno\"/>\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-email\">Email</label>\n                <input type=\"text\" \n                  onChange={this.handleInputChange.bind(this)}\n                  id=\"driver-email\" \n                  className=\"form-control\"\n                  value={this.state.email}\n                  name=\"email\"/>\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-phone\">Phone</label>\n                <input type=\"number\" \n                  onChange={this.handleInputChange.bind(this)}\n                  id=\"driver-phone\" \n                  className=\"form-control\"\n                  value={this.state.phone}\n                  name=\"phone\"/>\n              </div>\n\n              <div className=\"input-form-group\">\n                <label htmlFor=\"driver-licexpdate\">License Expiration Date</label>\n                <DatePicker\n                  dateFormat=\"yyyy/MM/dd\"\n                  selected={this.state.licexpdate}\n                  onChange={this.handleLEDChange.bind(this)}\n                />\n              </div>\n\n              <p className=\"text-danger\">\n                {this.state.errors}\n              </p>\n            </div>\n            <div className=\"modal-footer\">\n              <button \n                type=\"button\" \n                className=\"btn btn-default\"\n                onClick={this.closeModal.bind(this)}\n              >\n                  Cancel\n              </button>\n              <button \n                onClick={this.handleSave.bind(this)}\n                type=\"button\" \n                className=\"btn btn-primary\"\n              >\n                Save changes\n              </button>\n              <button \n                onClick={this.handleDelete.bind(this)}\n                type=\"button\" \n                className=\"btn btn-danger bottom-left\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n    </div>\n  }\n};\n\nconst mapStateToModalProps = (state) => {\n  return {\n    id: state.drivers.currentDriver.id,\n    newEntry: state.modal.newEntry,\n    modal: state.modal,\n    fname: state.drivers.currentDriver.fname,\n    lname: state.drivers.currentDriver.lname,\n    dob: state.drivers.currentDriver.dob,\n    licno: state.drivers.currentDriver.licno,\n    email: state.drivers.currentDriver.email,\n    phone: state.drivers.currentDriver.phone,\n    licexpdate: state.drivers.currentDriver.licexpdate\n  };\n}\n\nconst mapDispatchToModalProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  }\n}\n\nModal = connect(mapStateToModalProps, mapDispatchToModalProps)(Modal);\n\nexport { Modal }","import React from 'react';\nimport $ from \"jquery\";\n\nclass Driver extends React.Component {\n \n  setCurrentDriver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n        \n    let $currentPanel = $(e.target).closest('div').children('.driverInfo');\n    let currentDriver = {\n      id: this.props.id,\n      fname: this.props.fname,\n      lname: this.props.lname,\n      dob: this.props.dob,\n      licno: this.props.licno,\n      email: this.props.email,\n      phone: this.props.phone,\n      licexpdate: this.props.licexpdate\n    };\n    this.props.actions.setCurrentDriver(currentDriver);\n    $('.driverInfo').not($currentPanel).slideUp(400);\n    $(e.target).closest('div').children('.driverInfo').slideToggle(400);\n  }\n  \n  editDriver() {\n    this.props.actions.editDriver();\n    this.props.actions.toggleModal();\n  }\n  \n  render() {\n    return (\n      <div className=\"driver\">\n        <button className=\"driverHeaderLink\" onClick={this.setCurrentDriver.bind(this)}>\n          <h4 className={\"driverHeader\" + (this.props.active ? \" active\" : \"\")} >\n            {this.props.fname}\n          </h4>\n        </button>\n        <div className=\"driverInfo\">\n          <p><b>First name:</b> {this.props.fname}</p>\n          <p><b>Last name:</b> {this.props.lname}</p>\n          <p><b>DOB:</b> {this.props.dob}</p>\n          <p><b>License No:</b> {this.props.licno}</p>\n          <p><b>Email:</b> {this.props.email}</p>\n          <p><b>Phone Number:</b> {this.props.phone}</p>\n          <p><b>License Expiration Date:</b> {this.props.licexpdate}</p>\n          <button \n            onClick={this.editDriver.bind(this)}\n            className=\"btn edit-btn\"\n          >\n              Edit\n          </button>\n        </div>\n      </div>      \n    );\n  }\n};\n\nexport { Driver };","import React from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Actions } from './Actions';\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = ({\n      email: '',\n      pass: '',\n      errors: ''\n    });\n\n  }\n\n  validateEmail(email) {\n    let re = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  handleAuth() {\n    let user = {\n        email: this.state.email,\n        password: this.state.pass,\n    }\n    \n    if (!this.validateEmail(user.email)) {\n      this.setState({\n        errors: 'Email Not Valid!'\n      });\n      return;\n    }\n\n    const reqresAuth = async (data) => {\n      const rawResponse = await fetch('https://reqres.in/api/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const response = await rawResponse.json();\n\n      if(response.token) {\n        user.token = response.token;\n        this.props.actions.auth(user);\n      }else{\n        this.setState({\n          errors: response.error\n        });\n        return;\n      }\n    }\n\n    reqresAuth(user);\n    \n  }\n  \n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"loginBox\">\n        <div className=\"input-form-group\">\n          <label htmlFor=\"login-email\">Email</label>\n          <input type=\"text\" \n            onChange={this.handleLogin.bind(this)}\n            id=\"driver-email\" \n            className=\"form-control\"\n            value={this.state.email}\n            name=\"email\"/>\n        </div>\n\n        <div className=\"input-form-group\">\n          <label htmlFor=\"driver-pass\">Password</label>\n          <input type=\"password\" \n            onChange={this.handleLogin.bind(this)}\n            id=\"driver-pass\" \n            className=\"form-control\"\n            value={this.state.pass}\n            name=\"pass\"/>\n        </div>\n\n        <p className=\"text-danger\">\n          {this.state.errors}\n        </p>\n\n        <button \n          onClick={this.handleAuth.bind(this)}\n          type=\"button\" \n          className=\"btn btn-primary\"\n        >\n          Login\n        </button>\n      </div>    \n    );\n  }\n};\n\nconst mapStateToAuthProps = (state) => {\n  return {\n    email: state.email,\n    pass: state.pass\n  };\n}\n\nconst mapDispatchToAuthProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  }\n}\n\nAuth = connect(mapStateToAuthProps, mapDispatchToAuthProps)(Auth);\n\nexport { Auth };","import React from 'react';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Actions } from './Actions';\nimport { Modal } from './Modal';\nimport { Driver } from './Driver';\n\nimport { Auth } from './Login';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport './style.css';\n\nclass DriverApp extends React.Component {\n  createDriver() {\n    this.props.actions.createDriver();\n    this.props.actions.toggleModal();\n  }\n  \n  render() {\n    return (\n    <div id=\"main-container\">\n        <h1>DriverApp List</h1>\n      <div id=\"container\">   \n        {\n          this.props.modal.isOpen ?\n            <Modal />\n          : null  \n          } \n        <div className=\"driverApp\"> \n          {\n            this.props.auth ?\n              this.renderDrivers()\n            : \n              <Auth />\n          }\n        </div>\n\n        {\n          this.props.auth ?\n            <button\n              onClick={this.createDriver.bind(this)}\n              className=\"btn btn-success btn-create\"\n            >\n              Add New Driver\n            </button>\n          : null\n        }\n      </div>\n     </div> \n    );     \n  }\n  \n  componentDidMount() {\n    this.props.actions.isAuth();\n    this.props.actions.getAllDrivers();\n  }\n  \n  renderDrivers() {\n    if (!this.props.drivers || this.props.drivers.length < 1) {\n      return (\n        <h4 className=\"noList\">No drivers yet. Click 'Add New Driver' to get started!</h4>\n      );\n    }\n    const driverList = this.props.drivers.map(driver => {\n      return <Driver \n               key={driver.id} \n               active={\n                driver.id === this.props.currentDriver.id ? \n                  true \n                  : false \n               } \n               {...driver}\n               actions={this.props.actions}\n              />\n    });\n    return driverList;\n  }\n};\n\nconst mapStateToDriverAppProps = (state) => {\n  return {\n    drivers: state.drivers.all,\n    auth: state.drivers.auth,\n    currentDriver: state.drivers.currentDriver,\n    modal: state.modal\n  }\n} \n\nconst mapDispatchToDriverAppProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(Actions, dispatch)\n  }\n}\n\n DriverApp = connect(mapStateToDriverAppProps, mapDispatchToDriverAppProps)(DriverApp);\n\nexport { DriverApp }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { thunkMiddleware, persistData } from './Middleware';\nimport { DriverReducer, ModalReducer } from './Reducers';\n\nimport { DriverApp } from './App';\n\n// Redux configuration \nconst rootReducer = combineReducers({\n  drivers: DriverReducer,  \n  modal: ModalReducer\n});\n\nReactDOM.render(\n  <Provider store={createStore(rootReducer, applyMiddleware(thunkMiddleware, persistData))}>\n    <DriverApp />\n  </Provider>, \n  document.querySelector('#root'));\n\n","import { constants } from './Constants';\n\nconst thunkMiddleware = ({ dispatch, getState }) => {\n  return next => action =>\n    typeof action === 'function' ?\n      action(dispatch, getState) :\n      next(action);\n}\n  \nconst persistData = store => next => action => {\n  \n  let localState = localStorage.getItem('driver-list');\n  \n  if (localState && typeof JSON.parse(localState) === 'object') {\n    localState = JSON.parse(localState);\n  }\n  else {\n    let all = action.payload;\n    let driverState = { all: all, auth: false};\n    localState = Object.assign({}, {drivers: driverState});\n  }\n  \n  let result;\n  let newAction;\n  \n  switch(action.type) {\n    case constants.GET_ALL_DRIVERS:\n      newAction = {type: action.type};\n      newAction.payload = localState;\n      localStorage.setItem('driver-list', JSON.stringify(localState));\n      result = next(newAction);\n      return result;\n    case constants.IS_AUTH:\n      return next({\n        type: action.type,\n        payload: localState.drivers.auth\n      })\n    case constants.SAVE_NEW_DRIVER:\n      localState.drivers.all.push(action.payload);\n      localStorage.setItem('driver-list', JSON.stringify(localState));\n      result = next(action);\n      return result;\n    case constants.DELETE_DRIVER:\n      localState.drivers.all = localState.drivers.all.filter((driver, index) => {\n        return (index + 1) !== action.payload;\n      });\n      localStorage.setItem('driver-list', JSON.stringify(localState));\n      result = next(action);\n      return result;\n    case constants.UPDATE_DRIVER:\n      localState.drivers.all = localState.drivers.all.map((driver, index) => {\n        if (index + 1 === action.payload.id) {\n          return action.payload;\n        }\n        return driver;\n      });      \n      localStorage.setItem('driver-list', JSON.stringify(localState));\n      result = next(action);\n      return result;\n    case constants.AUTH:\n      localState.drivers.auth = action.payload;  \n      localStorage.setItem('driver-list', JSON.stringify(localState));\n      result = next(action);\n      return result;\n    default:\n      result = next(action);\n      return result;\n  }\n}\n  \nexport { thunkMiddleware, persistData }"],"sourceRoot":""}